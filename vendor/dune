(data_only_dirs *)

(subdir
 httpaf/lib
 (library
  (name httpaf)
  (public_name piaf.httpaf)
  (libraries angstrom faraday bigstringaf result)))

(subdir
 httpaf/lwt
 (library
  (name httpaf_lwt)
  (public_name piaf.httpaf-lwt)
  (libraries httpaf lwt gluten gluten-lwt)))

(subdir
 httpaf/lwt-unix
 (library
  (name httpaf_lwt_unix)
  (public_name piaf.httpaf-lwt-unix)
  (libraries
   faraday-lwt-unix
   piaf.httpaf
   piaf.httpaf-lwt
   gluten-lwt-unix
   lwt.unix)))

(subdir
 ocaml-h2/hpack/util
 (executables
  (names gen_huffman gen_static)
  (libraries compiler-libs.common)))

(subdir
 ocaml-h2/hpack/src
 (library
  (name hpack)
  (public_name piaf.hpack)
  (libraries angstrom faraday))
 (rule
  (targets huffman_table.ml)
  (deps ../util/huffman_table.txt)
  (action
   (with-stdout-to
    %{targets}
    (run ../util/gen_huffman.exe %{deps})))))

(subdir
 ocaml-h2/lib
 (library
  (name h2)
  (public_name piaf.h2)
  (libraries
   angstrom
   base64
   faraday
   bigstringaf
   piaf.httpaf
   result
   psq
   piaf.hpack)))

(subdir
 ocaml-h2/lwt
 (library
  (name h2_lwt)
  (public_name piaf.h2-lwt)
  (libraries lwt piaf.h2 gluten gluten-lwt)))

(subdir
 ocaml-h2/lwt-unix
 (library
  (name h2_lwt_unix)
  (public_name piaf.h2-lwt-unix)
  (libraries faraday-lwt-unix piaf.h2 piaf.h2-lwt gluten-lwt-unix lwt.unix)))

(subdir
 multipart_form/lib
 (library
  (name multipart_form)
  (public_name piaf.multipart_form)
  (libraries
   bigarray-compat
   bigstringaf
   faraday
   ke
   stdlib-shims
   unstrctrd
   unstrctrd.parser
   base64
   base64.rfc2045
   mrmime.prettym
   pecu
   result
   rresult
   uutf
   fmt
   angstrom)))
